# GoReleaser configuration
# Documentation: https://goreleaser.com

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy

builds:
  - id: luamerge
    main: ./cmd/cli
    binary: luamerge
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
      - arm
    goarm:
      - "7"
    ignore:
      - goos: windows
        goarch: arm
      - goos: windows
        goarch: arm64
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}

archives:
  - id: luamerge
    format: tar.gz
    name_template: >-
      {{ .ProjectName }}_
      {{- .Version }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.md
      - LICENSE*

checksum:
  name_template: 'checksums.txt'

snapshot:
  name_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^chore:'
      - '^ci:'

release:
  github:
    owner: YOUR_USERNAME
    name: luamerge
  draft: false
  prerelease: auto
  name_template: "v{{.Version}}"

# Upload binaries directly (in addition to archives)
# This allows the install.sh script to download individual binaries
uploads:
  - name: "{{ .ProjectName }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}{{ .Ext }}"
    mode: binary
    target: "https://uploads.github.com/repos/YOUR_USERNAME/luamerge/releases/{{ .Tag }}/assets?name={{ .ArtifactName }}"
